import cbor2


def cborDecode(bytecode):
    code = bytes.fromhex(bytecode)

    offset = int.from_bytes(code[-2:], 'big')
    signature = cbor2.loads(code[-offset:])
    names = ['runtime_size', 'data_sizes', 'immutable_size', 'compiler']
    result = dict(zip(names, signature))

    print(result)

bytecode = "600b6040527f48656c6c6f20576f726c64000000000000000000000000000000000000000000606052604080515f556020810151600155506100836100476000396100836000f35f3560e01c63cfae3217811861007b573461007f576020806040528060400160205f54015f81601f0160051c6005811161007f57801561004f57905b80548160051b85015260010181811861003b575b5050508051806020830101601f825f03163682375050601f19601f825160200101169050810190506040f35b5f5ffd5b5f80fd8418838000a16576797065728300030a0012"
cborDecode(bytecode)

bytecode = "604051503461002457602061003d5f395f51604052610003610028603d39610023603df35b5f80fd5f5ffd8403801820a16576797065728300030a0012"
cborDecode(bytecode)
